-- Create notification_types table to categorize notifications
CREATE TABLE notification_types (
  id SERIAL PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  category VARCHAR(50) NOT NULL,
  description TEXT,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Create main notifications table
CREATE TABLE notifications (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  notification_type_id INTEGER NOT NULL REFERENCES notification_types(id),
  user_id UUID NOT NULL,
  title VARCHAR(255) NOT NULL,
  message TEXT NOT NULL,
  is_read BOOLEAN NOT NULL DEFAULT FALSE,
  is_archived BOOLEAN NOT NULL DEFAULT FALSE,
  priority VARCHAR(20) DEFAULT 'normal',
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  trigger_event_id UUID, -- Reference to the event that triggered this notification
  metadata JSONB -- Flexible storage for notification-specific data
);

-- Create table for rent payment notifications
CREATE TABLE rent_payment_notifications (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  notification_id UUID NOT NULL REFERENCES notifications(id),
  tenant_id UUID NOT NULL,
  tenant_name VARCHAR(255) NOT NULL,
  tenant_email VARCHAR(255),
  tenant_phone VARCHAR(50),
  property_id UUID NOT NULL,
  property_address TEXT NOT NULL,
  unit_id UUID,
  payment_amount DECIMAL(10, 2),
  payment_id UUID,
  payment_date TIMESTAMPTZ,
  payment_method VARCHAR(50),
  transaction_reference VARCHAR(255),
  bank_account_id UUID,
  due_date TIMESTAMPTZ,
  days_overdue INTEGER,
  payment_frequency VARCHAR(50),
  lease_id UUID,
  payment_period VARCHAR(50),
  late_fee_applicable BOOLEAN,
  late_fee_amount DECIMAL(10, 2),
  total_arrears DECIMAL(10, 2),
  escalation_level INTEGER,
  previous_notification_date TIMESTAMPTZ,
  next_escalation_date TIMESTAMPTZ,
  remaining_balance DECIMAL(10, 2),
  original_amount_due DECIMAL(10, 2),
  payment_percentage DECIMAL(5, 2)
);

-- Create table for maintenance issue notifications
CREATE TABLE maintenance_notifications (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  notification_id UUID NOT NULL REFERENCES notifications(id),
  property_id UUID NOT NULL,
  property_address TEXT NOT NULL,
  unit_id UUID,
  issue_id UUID,
  issue_type VARCHAR(100),
  issue_title VARCHAR(255) NOT NULL,
  issue_description TEXT,
  priority_level VARCHAR(20),
  tenant_id UUID,
  tenant_name VARCHAR(255),
  tenant_contact VARCHAR(255),
  report_date TIMESTAMPTZ,
  category_id UUID,
  location_in_property VARCHAR(255),
  time_sensitivity VARCHAR(50),
  estimated_repair_cost DECIMAL(10, 2),
  safety_impact VARCHAR(50),
  habitability_impact VARCHAR(50),
  status VARCHAR(50),
  previous_status VARCHAR(50),
  status_changed_by UUID,
  update_details TEXT,
  date_updated TIMESTAMPTZ,
  assigned_contractor_id UUID,
  estimated_completion_date TIMESTAMPTZ,
  resolution_details TEXT,
  resolution_date TIMESTAMPTZ,
  resolved_by UUID,
  cost_amount DECIMAL(10, 2),
  cost_id UUID,
  invoice_id UUID,
  total_time_to_resolution INTEGER,
  tenant_satisfaction_status VARCHAR(50),
  quote_id UUID,
  quote_amount DECIMAL(10, 2),
  quote_validity_period VARCHAR(50),
  supplier_id UUID,
  supplier_name VARCHAR(255),
  supplier_contact VARCHAR(255),
  work_details TEXT,
  estimated_completion_time VARCHAR(100),
  quote_expiry_date TIMESTAMPTZ,
  scheduled_date TIMESTAMPTZ,
  time_window VARCHAR(100),
  appointment_id UUID,
  contractor_id UUID,
  contractor_name VARCHAR(255),
  contractor_contact VARCHAR(255),
  access_arrangements TEXT,
  tenant_notified BOOLEAN,
  estimated_duration VARCHAR(50)
);

-- Create table for financial notifications
CREATE TABLE financial_notifications (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  notification_id UUID NOT NULL REFERENCES notifications(id),
  supplier_id UUID,
  supplier_name VARCHAR(255),
  supplier_contact VARCHAR(255),
  invoice_amount DECIMAL(10, 2),
  invoice_id UUID,
  invoice_date TIMESTAMPTZ,
  property_id UUID,
  property_address TEXT,
  unit_id UUID,
  service_description TEXT,
  service_category_id UUID,
  work_order_id UUID,
  due_date TIMESTAMPTZ,
  payment_terms VARCHAR(255),
  tax_amount DECIMAL(10, 2),
  expense_id UUID,
  expense_type VARCHAR(100),
  expense_category VARCHAR(100),
  payment_frequency VARCHAR(50),
  auto_payment_status VARCHAR(50),
  recipient_id UUID,
  recipient_name VARCHAR(255),
  account_details TEXT,
  previous_payment_date TIMESTAMPTZ,
  previous_payment_amount DECIMAL(10, 2),
  building_id UUID,
  new_amount DECIMAL(10, 2),
  previous_amount DECIMAL(10, 2),
  change_percentage DECIMAL(5, 2),
  effective_date TIMESTAMPTZ,
  billing_period VARCHAR(100),
  breakdown_document_id UUID,
  managing_agent_id UUID,
  reason_for_change TEXT,
  approval_reference VARCHAR(255),
  portfolio_id UUID,
  tax_year_start DATE,
  tax_year_end DATE,
  total_rental_income DECIMAL(10, 2),
  total_expenses DECIMAL(10, 2),
  profit_loss DECIMAL(10, 2),
  submission_deadline TIMESTAMPTZ,
  hmrc_reference VARCHAR(255),
  utr_number VARCHAR(255),
  previous_year_comparison TEXT,
  accountant_id UUID,
  estimated_tax_liability DECIMAL(10, 2),
  documentation_status VARCHAR(100)
);

-- Create table for tenancy notifications
CREATE TABLE tenancy_notifications (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  notification_id UUID NOT NULL REFERENCES notifications(id),
  tenant_id UUID,
  tenant_name VARCHAR(255),
  tenant_email VARCHAR(255),
  tenant_phone VARCHAR(50),
  property_id UUID,
  property_address TEXT,
  unit_id UUID,
  expiry_date TIMESTAMPTZ,
  lease_id UUID,
  lease_start_date TIMESTAMPTZ,
  lease_end_date TIMESTAMPTZ,
  current_rent DECIMAL(10, 2),
  market_rent_assessment DECIMAL(10, 2),
  tenancy_duration VARCHAR(100),
  renewal_offer_status VARCHAR(50),
  tenant_communication_history TEXT,
  tenant_payment_reliability_score DECIMAL(5, 2),
  applicant_id UUID,
  contact_details TEXT,
  listing_id UUID,
  desired_move_in_date TIMESTAMPTZ,
  application_date TIMESTAMPTZ,
  application_id UUID,
  referencing_status VARCHAR(50),
  credit_check_status VARCHAR(50),
  proposed_rent DECIMAL(10, 2),
  proposed_term VARCHAR(100),
  special_conditions TEXT,
  source_of_application VARCHAR(100),
  agent_id UUID,
  planned_vacate_date TIMESTAMPTZ,
  notice_date TIMESTAMPTZ,
  notice_id UUID,
  required_notice_period VARCHAR(50),
  notice_period_compliance VARCHAR(50),
  reason_for_leaving TEXT,
  exit_interview_scheduled BOOLEAN,
  inspection_date TIMESTAMPTZ,
  inspection_id UUID,
  inspection_type VARCHAR(100),
  last_inspection_date TIMESTAMPTZ,
  last_inspection_id UUID,
  last_inspection_result TEXT,
  inspector_id UUID,
  inspection_checklist_id UUID,
  notification_status VARCHAR(50),
  tenant_confirmed BOOLEAN
);

-- Create table for compliance notifications
CREATE TABLE compliance_notifications (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  notification_id UUID NOT NULL REFERENCES notifications(id),
  certificate_type VARCHAR(100),
  certificate_id UUID,
  regulatory_requirement_id UUID,
  property_id UUID,
  property_address TEXT,
  unit_id UUID,
  expiry_date TIMESTAMPTZ,
  issue_date TIMESTAMPTZ,
  issuing_authority VARCHAR(255),
  contractor_id UUID,
  renewal_cost_estimate DECIMAL(10, 2),
  compliance_impact TEXT,
  legal_requirement_reference VARCHAR(255),
  previous_renewal_date TIMESTAMPTZ,
  document_storage_location TEXT,
  missing_document_type VARCHAR(100),
  document_id UUID,
  legal_requirement_id UUID,
  legal_requirement TEXT,
  regulatory_authority VARCHAR(255),
  potential_penalty TEXT,
  compliance_deadline TIMESTAMPTZ,
  days_overdue INTEGER,
  risk_level VARCHAR(50),
  action_required TEXT,
  responsible_person_id UUID,
  escalation_level INTEGER,
  deposit_amount DECIMAL(10, 2),
  deposit_id UUID,
  payment_date TIMESTAMPTZ,
  protection_deadline TIMESTAMPTZ,
  protection_scheme_id UUID,
  days_remaining INTEGER,
  tenant_notification_status VARCHAR(50)
);

-- Create table for property performance notifications
CREATE TABLE property_performance_notifications (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  notification_id UUID NOT NULL REFERENCES notifications(id),
  property_id UUID,
  property_address TEXT,
  unit_id UUID,
  days_vacant INTEGER,
  vacancy_start_date TIMESTAMPTZ,
  estimated_lost_income DECIMAL(10, 2),
  daily_rental_value DECIMAL(10, 2),
  local_market_indicators TEXT,
  occupancy_rate_area DECIMAL(5, 2),
  marketing_status VARCHAR(50),
  listing_id UUID,
  viewing_count INTEGER,
  last_tenancy_end_date TIMESTAMPTZ,
  reason_for_vacancy TEXT,
  current_rent DECIMAL(10, 2),
  market_average DECIMAL(10, 2),
  percentage_difference DECIMAL(5, 2),
  lease_renewal_date TIMESTAMPTZ,
  rent_review_date TIMESTAMPTZ,
  area_rental_trend VARCHAR(100),
  rental_growth_percentage DECIMAL(5, 2),
  comparable_properties_data TEXT,
  last_increase_date TIMESTAMPTZ,
  total_income DECIMAL(10, 2),
  income_breakdown JSONB,
  income_id UUID,
  total_expenses DECIMAL(10, 2),
  expense_breakdown JSONB,
  expense_categories JSONB,
  net_profit DECIMAL(10, 2),
  roi_percentage DECIMAL(5, 2),
  yield_percentage DECIMAL(5, 2),
  period_start_date TIMESTAMPTZ,
  period_end_date TIMESTAMPTZ,
  report_id UUID,
  year_to_date_figures JSONB,
  occupancy_rate DECIMAL(5, 2),
  maintenance_cost_ratio DECIMAL(5, 2),
  portfolio_id UUID,
  number_of_properties_with_issues INTEGER,
  total_negative_cash_flow DECIMAL(10, 2),
  average_deficit DECIMAL(10, 2),
  most_affected_property_id UUID,
  portfolio_occupancy_rate DECIMAL(5, 2),
  portfolio_yield DECIMAL(5, 2),
  trend_indicator VARCHAR(50),
  previous_period_comparison TEXT,
  suggested_actions TEXT,
  critical_attention_properties JSONB
);

-- Insert notification types based on categories from the recent-updates rules
INSERT INTO notification_types (name, category, description) VALUES
-- Rent Payment Notifications
('payment_received', 'rent_payment', 'Notification for when a rent payment is received'),
('upcoming_rent_due', 'rent_payment', 'Notification for when rent is due in 5 days'),
('rent_due_today', 'rent_payment', 'Notification for when rent is due today'),
('rent_overdue_initial', 'rent_payment', 'Notification for when rent is 1 day overdue'),
('rent_overdue_escalation', 'rent_payment', 'Notification for when rent is several days overdue'),
('partial_payment_received', 'rent_payment', 'Notification for when a partial rent payment is received'),

-- Maintenance & Issue Notifications
('new_issue_reported', 'maintenance', 'Notification for when a new maintenance issue is reported'),
('urgent_issue_reported', 'maintenance', 'Notification for when an urgent maintenance issue is reported'),
('issue_status_update', 'maintenance', 'Notification for when a maintenance issue status is updated'),
('issue_resolution', 'maintenance', 'Notification for when a maintenance issue is resolved'),
('quote_received', 'maintenance', 'Notification for when a quote is received for a maintenance issue'),
('maintenance_scheduled', 'maintenance', 'Notification for when maintenance work is scheduled'),

-- Financial Notifications
('invoice_received', 'financial', 'Notification for when a new invoice is received'),
('upcoming_regular_payment', 'financial', 'Notification for when a regular payment is due'),
('service_charge_update', 'financial', 'Notification for when a service charge is updated'),
('annual_return_reminder', 'financial', 'Notification for when a tax return is due'),

-- Tenancy Notifications
('lease_expiry_approaching', 'tenancy', 'Notification for when a lease is about to expire'),
('new_tenant_application', 'tenancy', 'Notification for when a new tenant application is received'),
('tenant_notice_to_vacate', 'tenancy', 'Notification for when a tenant gives notice to vacate'),
('inspection_due', 'tenancy', 'Notification for when a property inspection is due'),

-- Compliance Notifications
('certificate_expiring', 'compliance', 'Notification for when a certificate is about to expire'),
('compliance_breach_risk', 'compliance', 'Notification for when there is a risk of compliance breach'),
('deposit_protection_reminder', 'compliance', 'Notification for when a tenant deposit needs to be protected'),

-- Property Performance Notifications
('vacancy_alert', 'property_performance', 'Notification for when a property has been vacant'),
('rent_increase_opportunity', 'property_performance', 'Notification for when there is an opportunity to increase rent'),
('property_performance_summary', 'property_performance', 'Monthly summary of property performance'),
('portfolio_performance_alert', 'property_performance', 'Alert for when portfolio shows concerning trends');

-- Create indexes for performance
CREATE INDEX idx_notifications_user_id ON notifications(user_id);
CREATE INDEX idx_notifications_type_id ON notifications(notification_type_id);
CREATE INDEX idx_notifications_created_at ON notifications(created_at);
CREATE INDEX idx_notifications_is_read ON notifications(is_read);
CREATE INDEX idx_rent_payment_notifications_tenant_id ON rent_payment_notifications(tenant_id);
CREATE INDEX idx_rent_payment_notifications_property_id ON rent_payment_notifications(property_id);
CREATE INDEX idx_maintenance_notifications_property_id ON maintenance_notifications(property_id);
CREATE INDEX idx_maintenance_notifications_issue_id ON maintenance_notifications(issue_id);
CREATE INDEX idx_financial_notifications_property_id ON financial_notifications(property_id);
CREATE INDEX idx_tenancy_notifications_property_id ON tenancy_notifications(property_id);
CREATE INDEX idx_tenancy_notifications_tenant_id ON tenancy_notifications(tenant_id);
CREATE INDEX idx_compliance_notifications_property_id ON compliance_notifications(property_id);
CREATE INDEX idx_property_performance_notifications_property_id ON property_performance_notifications(property_id);
